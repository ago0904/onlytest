# -*- coding: utf-8 -*-
"""
@Time : 2024/4/26 13:31
@Author : Mr.Chen
@File： 08_元组
@describe：
"""
"""
⼀. 元组的应⽤场景
    思考：如果想要存储多个数据，但是这些数据是不能修改的数据，怎么做？
    答：列表？列表可以⼀次性存储多个数据，但是列表中的数据允许更改。
    num_list = [10, 20, 30]
    num_list[0] = 100
⼀个元组可以存储多个数据，元组内的数据是不能修改的。
⼆. 定义元组
    元组特点：定义元组使⽤⼩括号，且逗号隔开各个数据，数据可以是不同的数据类型。
        # 多个数据元组
        t1 = (10, 20, 30)
        # 单个数据元组
        t2 = (10,)
    注意：如果定义的元组只有⼀个数据，那么这个数据后⾯也要添加逗号，否则数据类型为唯⼀的这个数据的数据类型
        t2 = (10,)
        print(type(t2)) # tuple
        t3 = (20)
        print(type(t3)) # int
        t4 = ('hello')
        print(type(t4)) # st
三. 元组的常⻅操作
    元组数据不⽀持修改，只⽀持查找，具体如下：
        1.按下标查找数据
            tuple1 = ('aa', 'bb', 'cc', 'bb')
            print(tuple1[0]) # aa
        2.index()：查找某个数据，如果数据存在返回对应的下标，否则报错，语法和列表、字符串的index⽅法相同。
            tuple1 = ('aa', 'bb', 'cc', 'bb')
            print(tuple1.index('aa')) # 0
        3.count()：统计某个数据在当前元组出现的次数。
            tuple1 = ('aa', 'bb', 'cc', 'bb')
            print(tuple1.count('bb')) # 2
        4.len()：统计元组中数据的个数。
            tuple1 = ('aa', 'bb', 'cc', 'bb')
            print(len(tuple1)) # 4
            注意：元组内的直接数据如果修改则⽴即报错
                tuple1 = ('aa', 'bb', 'cc', 'bb')
                tuple1[0] = 'aaa'
                但是如果元组⾥⾯有列表，修改列表⾥⾯的数据则是⽀持的，故这点很重要。
                    tuple2 = (10, 20, ['aa', 'bb', 'cc'], 50, 30)
                    print(tuple2[2]) # 访问到列表
                    # 结果：(10, 20, ['aaaaa', 'bb', 'cc'], 50, 30)
                    tuple2[2][0] = 'aaaaa'
                    print(tuple2)
"""